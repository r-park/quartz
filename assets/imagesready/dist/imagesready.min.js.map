{"version":3,"sources":["imagesready.min.js"],"names":["root","factory","define","amd","exports","module","imagesReady","this","rawAsap","task","queue","length","requestFlush","flushing","flush","index","currentIndex","call","capacity","scan","newLength","makeRequestCallFromMutationObserver","callback","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setTimeout","setInterval","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","TypeError","_state","_value","_deferreds","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","push","asap","cb","promise","ret","newValue","finale","bind","i","done","value","reason","defer","ImagesReady","elements","options","querySelectorAll","providedElements","toArray","images","findImageElements","jquery","$","Deferred","result","total","loaded","verified","auto","verify","instance","window","MutationObserver","WebKitMutationObserver","_noop","prototype","slice","Array","validNodeTypes",1,9,11,"element","imageElements","nodeName","nodeType","n","l","update","clean","image","complete","naturalWidth","verifyByProxy","src","imageSrc","Image","that","cleanup","removeEventListener","onload","onerror","addEventListener","object","isArray","jQuery"],"mappings":"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","file":"imagesready.min.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.imagesReady = factory();\n  }\n}(this, function() {\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\n//module.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n'use strict';\n\nvar asap = rawAsap;\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\n//module.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._state = 0;\n  this._value = null;\n  this._deferreds = [];\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._noop = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  asap(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._state === 1) {\n        resolve(deferred.promise, self._value);\n      } else {\n        reject(deferred.promise, self._value);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._value);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._state = 3;\n      self._value = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._state = 1;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\nfunction finale(self) {\n  for (var i = 0; i < self._deferreds.length; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n'use strict';\n\n\nvar slice = Array.prototype.slice;\n\nvar validNodeTypes = {\n  1  : true, // ELEMENT_NODE\n  9  : true, // DOCUMENT_NODE\n  11 : true  // DOCUMENT_FRAGMENT_NODE\n};\n\n\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function(resolve, reject){\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n\n\n/**\n * @name ImagesReady\n * @constructor\n *\n * @param {DocumentFragment|Element|Element[]|jQuery|NodeList|string} elements\n *\n * @param {{}}      [options]\n * @param {boolean} [options.auto]\n * @param {boolean} [options.jquery]\n *\n */\nfunction ImagesReady(elements, options) {\n  options = options || {};\n\n  if (typeof elements === 'string') {\n    elements = document.querySelectorAll(elements);\n  }\n\n  this.providedElements = elements;\n  this.elements = this.toArray(elements);\n  this.images = this.findImageElements(this.elements);\n\n  if (options && options.jquery) {\n    this.deferred = new $.Deferred();\n    this.result = this.deferred.promise();\n  }\n  else {\n    this.deferred = defer();\n    this.result = this.deferred.promise;\n  }\n\n  this.total = this.images.length;\n  this.loaded = 0;\n  this.verified = 0;\n\n  if (options.auto !== false) {\n    this.verify();\n  }\n}\n\n\n\nImagesReady.prototype = {\n\n  /**\n   * @param {Element[]} elements\n   * @returns {HTMLImageElement[]}\n   */\n  findImageElements : function(elements) {\n    var images = [],\n        i = elements.length,\n        element,\n        imageElements;\n\n    while (i--) {\n      element = elements[i];\n\n      if (element.nodeName === 'IMG') {\n        images.push(element);\n      }\n      else if (element.nodeType && validNodeTypes[element.nodeType]) {\n        imageElements = element.querySelectorAll('img');\n        for (var n = 0, l = imageElements.length; n < l; ++n) {\n          images.push(imageElements[n]);\n        }\n      }\n    }\n\n    return images;\n  },\n\n\n  /**\n   *\n   */\n  update : function() {\n    this.verified++;\n\n    if (this.total === this.verified) {\n      if (this.total === this.loaded) {\n        this.deferred.resolve(this.providedElements);\n      }\n      else {\n        this.deferred.reject('FAIL');\n      }\n\n      this.clean();\n    }\n  },\n\n\n  /**\n   *\n   */\n  verify : function() {\n    var images = this.images,\n        i = -1,\n        l = images.length,\n        image;\n\n    while (++i < l) {\n      image = images[i];\n\n      if (image.complete && image.naturalWidth) {\n        this.loaded++;\n        this.update();\n      }\n      else {\n        this.verifyByProxy(image.src);\n      }\n    }\n  },\n\n\n  /**\n   * @param {string} imageSrc\n   */\n  verifyByProxy : function(imageSrc) {\n    var image = new Image(),\n        that = this;\n\n    var cleanup = function() {\n      image.removeEventListener('load', onload);\n      image.removeEventListener('load', onerror);\n      image = null;\n    };\n\n    image.addEventListener('load', function onload(){\n      that.loaded++;\n      that.update();\n      cleanup();\n    });\n\n    image.addEventListener('error', function onerror(){\n      that.update();\n      cleanup();\n    });\n\n    image.src = imageSrc;\n  },\n\n\n  /**\n   *\n   */\n  clean : function() {\n    this.elements = null;\n    this.images = null;\n  },\n\n\n  /**\n   * {Element|Element[]|NodeList} object\n   * @returns {Element[]}\n   */\n  toArray : function(object) {\n    if (Array.isArray(object)) return object;\n\n    if (typeof object.length === 'number') {\n      return slice.call(object);\n    }\n\n    return [object];\n  }\n\n};\n\n\n/*=========================================================\n  jQuery plugin\n=========================================================*/\nif (window.jQuery) {\n  $.fn.imagesReady = function() {\n    var instance = new ImagesReady(this, {jquery: true}); // eslint-disable-line no-shadow\n    return instance.result;\n  };\n}\n\n\n/*=========================================================\n  Default entry point\n=========================================================*/\nfunction imagesReady(elements) { // eslint-disable-line no-unused-vars\n  var instance = new ImagesReady(elements);\n  return instance.result;\n}\n\nreturn imagesReady;\n}));\n"],"sourceRoot":"/source/"}